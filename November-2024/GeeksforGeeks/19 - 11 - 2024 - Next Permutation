class Solution {
    reverse (arr,start, end) {
        while (start < end) {
            arr[start] ^= arr[end];
            arr[end] ^= arr[start];
            arr[start] ^= arr[end];
            start++;
            end--;
        }
    }
    
    search (arr, target, idx) {
        let res = idx;
        const n = arr.length;
        for (let i = n - 1 ; i > idx; i--) {
            if (arr[i] > target) {
                res = i;
                break;
            }
        }
        
        return res;
    }
    
    nextPermutation(arr) {
        const n = arr.length;
        
        let i = n - 2;
        let idx = -1;
        while (i >= 0) {
            if (arr[i] < arr[i+1]) {
                idx = i;
                break;
            }
            i--;
        }
        
        if (i < 0) {
            this.reverse(arr,0, n-1);
            return arr;
        }
        
        let index = this.search(arr, arr[idx], idx);
        
        arr[idx] ^= arr[index];
        arr[index] ^= arr[idx];
        arr[idx] ^= arr[index];
        
        this.reverse(arr,idx+1, n -1);
        
        return arr;
    }
}
