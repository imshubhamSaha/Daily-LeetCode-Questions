var guardable = function(grid, r, c, n ,m) {
    for (let row = r + 1; row < m; row++) {
        if (grid[row][c] === 1 || grid[row][c] === 2) break;
        grid[row][c] = 3;
    }

    for (let row = r - 1; row >= 0; row--) {
        if (grid[row][c] === 1 || grid[row][c] === 2 ) break;
        grid[row][c] = 3;
    }

    for (let col = c + 1; col < n; col++) {
        if (grid[r][col] === 1 || grid[r][col] === 2) break;
        grid[r][col] = 3;
    }

    for (let col = c - 1; col >= 0; col--) {
        if (grid[r][col] === 1 || grid[r][col] === 2 ) break;
        grid[r][col] = 3;
    }
}

/**
 * @param {number} m
 * @param {number} n
 * @param {number[][]} guards
 * @param {number[][]} walls
 * @return {number}
 */
var countUnguarded = function(m, n, guards, walls) {
    const grid = Array.from({length : m}, (_) => new Array(n).fill(0));
    /**
     # 1 --> Guard
     # 2 --> Wall
     # 3 --> Guardable
     # 0 --> unGuardable
     */
    for (const [r,c] of guards) {
        grid[r][c] = 1;
    }

    for (const [r,c] of walls) {
        grid[r][c] = 2;
    }

    for (const [r,c] of guards) {
        guardable(grid,r,c,n,m);
    }

    let unGuardable = 0;
    console.log(grid)
    for (let row of grid) {
        for (let col of row) {
            if (col === 0) 
                unGuardable++;
        }
    }

    return unGuardable;
};
