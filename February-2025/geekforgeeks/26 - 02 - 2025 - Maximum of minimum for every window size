class Solution {
    maxOfMins(arr) {
        const n = arr.length;
        const result = new Array(n).fill(0);
        const left = new Array(n).fill(-1);
        const right = new Array(n).fill(n);
        let stack = [];
        
        for (let i = 0; i < n; ++i) {
            while (stack.length > 0 && arr[stack[stack.length - 1]] >= arr[i]) {
                stack.pop();
            }
            if (stack.length > 0) {
                left[i] = stack[stack.length - 1];
            }
            stack.push(i);
        }
        
        stack = [];
        
        for (let i = n - 1; i >= 0; --i) {
            while (stack.length > 0 && arr[stack[stack.length - 1]] > arr[i]) {
                stack.pop();
            }
            if (stack.length > 0) {
                right[i] = stack[stack.length - 1];
            }
            stack.push(i);
        }
        
        for (let i = 0; i < n; ++i) {
            let window_size = right[i] - left[i] - 1;
            result[window_size - 1] = Math.max(result[window_size - 1], arr[i]);
        }
        
        for (let i = n - 2; i >= 0; --i) {
            result[i] = Math.max(result[i], result[i + 1]);
        }
        
        return result;
    }
