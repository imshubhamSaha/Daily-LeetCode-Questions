/**
 * @param {number[]} nums
 * @return {number}
 */
var longestMonotonicSubarray = function(nums) {
    const n = nums.length;
    let increase = 1;
    let decrese = 1;
    let strt = 0;
    for (let i = 1; i < n; i++) {
        if (nums[i] > nums[i-1]) {
            increase = Math.max(increase, (i - strt)+1);
        }else strt = i;
    }

    strt = 0;

    for (let i = 1; i < n; i++) {
        if (nums[i] < nums[i-1]) {
            decrese = Math.max(decrese, (i - strt)+1);
        }else strt = i;
    }

    return Math.max(decrese, increase);
};


/**
 * @param {number[]} nums
 * @return {number}
 */
var longestMonotonicSubarray = function(nums) {
    const n = nums.length;
    let maxLen = 1;
    let increase = 1;
    let decrease = 1;
    for (let i = 0; i < n - 1; i++) {
        if (nums[i+1] > nums[i]) {
            increase++;
            decrease = 1;
        }
        else if (nums[i+1] < nums[i]) {
            decrease++;
            increase = 1;
        }else {
            decrease = 1;
            increase = 1;
        }

        maxLen = Math.max(maxLen, Math.max(increase, decrease));
    }

    return maxLen;
};
