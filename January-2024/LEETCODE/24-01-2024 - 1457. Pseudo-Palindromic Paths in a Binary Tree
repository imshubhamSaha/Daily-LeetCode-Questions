/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var pseudoPalindromicPaths  = function(root) {

    if(!root.right && !root.left)
        return 1;
    let palindromeCnt = 0;
    const stk = [[root, 0]];

    while(stk.length) {
        let [node, occurrence] = stk.pop();

        if(node !== null) {
            occurrence ^= 1 << node.val;
            if(!node.left && !node.right) {
                if((occurrence & (occurrence-1)) === 0) 
                    palindromeCnt += 1;
            }        
            else {
                stk.push([node.right, occurrence]);
                stk.push([node.left, occurrence]);
            }

        }
    }

    return palindromeCnt;
};
