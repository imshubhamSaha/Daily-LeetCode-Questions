
class Solution 
{
    comparator(p1, p2) {
        if(p1 > p2)
            return -1;
        if(p1 < p2)
            return 1;
        return 0;
    }
    
    fractionalKnapsack(W, inp, n)
    {
        return inp.sort((a,b) => this.comparator(a.value/a.weight,b.value/b.weight))
        .reduce((acc,curr) => {
            if(acc[2] <= acc[1])
                return [acc[0],acc[1],acc[2]];
            if((acc[1] + curr.weight) < acc[2]) 
                return [acc[0]+curr.value, acc[1]+curr.weight, acc[2]];
            else {
                const res = (curr.value/curr.weight)*(acc[2]-acc[1])
                return [acc[0]+res, acc[1]+curr.weight, acc[2]];
            }
            
        },[0,0,W])[0];
        
    }
}
