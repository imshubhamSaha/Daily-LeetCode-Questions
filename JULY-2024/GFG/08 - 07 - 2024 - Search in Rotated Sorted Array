class Solution {
    search(arr, key) {
        const len = arr.length;
        let i = 0;
        while(i < len) 
            if(arr[i++] === key) return --i;
            
        return -1;    
    }
}

Time Complexity : O(n);
Space Complexity : O(1);

***************************************************************************************************************************************************************************************

class Solution {
    search(arr, key) {
        const len = arr.length;
        let low = 0;
        let high = len - 1;
        
        while(low <= high) {
            let mid = low + Math.floor((high - low) / 2);
            
            if(arr[mid] === key) 
                return mid;
            else if (arr[low] <= arr[mid]) {
                if(key >= arr[low] && key < arr[mid])
                    high = mid - 1;
                else low = mid + 1;    
            }
            else {
                if(key > arr[mid] && key <= arr[high]) 
                    low = mid + 1;
                else high = mid - 1;    
            }
        }
            
        return -1;    
    }
}

Time Complexity : O(logn);
Space Complexity : O(1);
***************************************************************************************************************************************************************************************
