class Solution {
    /**
    * @param number n
    * @param number m
    * @param number[][] mat

    * @returns number
    */
    maxSquare(n, m, mat) {
        let ans = 0;
        
        for (let i = 0; i < m; i++)
            ans = Math.max(mat[0][i],ans);
            
        for (let i = 0; i < n; i++)
            ans = Math.max(ans, mat[i][0]);
            
        for (let i = 1; i < n; i++) {
            for (let j = 1; j <  m; j++) {
                if(mat[i][j]) 
                    mat[i][j] = Math.min(mat[i-1][j-1], mat[i-1][j], mat[i][j-1]) + 1;
                ans = Math.max(ans, mat[i][j]);    
            }
        }
        return ans;
    }
}
TIME COMPLEXITY -->> O(N * M);
SPACE COMPLEXITY -->> O(1);
