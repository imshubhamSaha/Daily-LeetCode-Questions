function lemonadeChange( n,bills) {
    let five = 0;
    let ten = 0;
    
    for(let i=0; i<n;i++){
        if(bills[i] === 5) {
            five++
        }
        else if(bills[i] === 10) {
            ten++;
            if(five < 1) {
                return false;
            }
            five--;
        }else{
            if(five>=1 && ten>=1) {
                five--;
                ten--;
            }else if(five>=3){
                five -=3;
            }else{
                return false;
            }
        }
    }
    
    return true;
}
Time Complexity --> O(N);
Space Complexity --> O(1);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------C++ APPROACH---------------------------------------------------------------------------------
class Solution {
  public:
    bool lemonadeChange(int N, vector<int> &bills) {
        int five = 0;
        int ten = 0;
    
        for(int i=0; i<N;i++){
            if(bills[i] == 5) 
            {
                five++;
            }
            else if(bills[i] == 10) 
            {
                ten++;
                if(five < 1) 
                {
                    return false;
                }
                five--;
            }
            else
            {
                if(five>=1 && ten>=1) 
                {
                    five--;
                    ten--;
                }
                else if(five >=3)
                {
                    five -=3;
                }
                else
                {
                    return false;
                }
            }
        }
        
        return true;
    }
};
