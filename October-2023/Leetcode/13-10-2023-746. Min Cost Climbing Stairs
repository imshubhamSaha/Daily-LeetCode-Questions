/**
 * @param {number[]} cost
 * @return {number}
 */
var minCostClimbingStairs = function(cost) {
    const n = cost.length;
    const dp = new Array(n+1).fill(0);
    dp[n-1] = cost[n-1];
    for(let i = n-2; i>=0; i--) {
        dp[i] = cost[i] + Math.min(dp[i+1], dp[i+2])
    }

    return Math.min(dp[0], dp[1]);
};

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

/**
 * @param {number[]} cost
 * @return {number}
 */
var minCostClimbingStairs = function(cost) {
    const n = cost.length;
    let jump1 = 0,jump2= 0;

    for(let i= n-1; i>=0; i--) {
        let currPos = Math.min(jump1, jump2) + cost[i];
        jump2= jump1;
        jump1= currPos;
    }

    return Math.min(jump1, jump2);
};
