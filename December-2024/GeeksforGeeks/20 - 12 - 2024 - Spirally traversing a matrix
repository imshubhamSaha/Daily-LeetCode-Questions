class Solution {
    // Function to return a list of integers denoting spiral traversal of matrix.
    spirallyTraverse(mat) {
        const n = mat.length;
        const m = mat[0].length;
        const res = [];
        let left = 0, right = m - 1;
        let top = 0, bottom = n - 1;
        
        while (top <= bottom && left <= right) {
            for (let i = left; i <= right; i++) {
                res.push(mat[top][i]);
            }
            top++;
            if (top > bottom) break;
            for (let i = top; i <= bottom; i++) {
                res.push(mat[i][right]);
            }
            right--;
            if (right < left) break;
            for (let i = right; i >= left; i--) {
                res.push(mat[bottom][i]);
            }
            bottom--;
            
            for (let i = bottom; i>= top; i--) {
                res.push(mat[i][left]);
            }
            left++;
        }
        
        return res;
    }
}

Time Complexity: O(n×m)
Space Complexity: O(n×m)
