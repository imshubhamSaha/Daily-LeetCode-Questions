class Solution {
    lps(pat, lps) {
        let length = 0;

        lps[0] = 0;

        let i = 1;
        while (i < pat.length) {
        
            if (pat[i] === pat[length]) {
                length++;
                lps[i] = length;
                i++;
            }
            else {
                if (length !== 0) {
                length = lps[length - 1];
                } else {
                    lps[i] = 0;
                    i++;
                }
            }
        }
    }


    search(pat, txt) {
        const n = txt.length;
        const m = pat.length;

        const lps = new Array(m).fill(0);
        const res = [];

        this.lps(pat, lps);

        let i = 0;
        let j = 0;

        while (i < n) {
            if (txt[i] === pat[j]) {
                i++;
                j++;

                if (j === m) {
                    res.push(i - j);
                    j = lps[j - 1];
                }
            }
            else {
                if (j !== 0)
                    j = lps[j - 1];
                else
                    i++;
            }
        }
        return res; 
    }
}
