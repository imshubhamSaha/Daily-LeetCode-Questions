/**
 * @param {string} s
 * @param {number} repeatLimit
 * @return {string}
 */
var repeatLimitedString = function(s, repeatLimit) {
    const n = s.length;
    const freq = new Array(26).fill(0);

    for (let i = 0; i < n; i++) {
        freq[s[i].charCodeAt(0) - 97]++;
    }
    const maxHeap = [];

    for (let i = 25; i >= 0; i--) {
        if (freq[i])
            maxHeap.push([String.fromCharCode(i+97), freq[i]]);
    }

    const res = [];

    let idx = 0;

    while (idx < maxHeap.length) {
        let [ch,cnt] = maxHeap[idx++];
        const lim = Math.min(cnt,repeatLimit);
        res.push(ch.repeat(lim));

        cnt -= lim;

        if (cnt > 0 && idx < maxHeap.length) {
            let [nxtCh, nxtCnt] = maxHeap[idx];
            res.push(nxtCh);
            nxtCnt--;
            if (nxtCnt) {
                maxHeap[idx] = [nxtCh,nxtCnt];
                maxHeap[idx-1] = [ch,cnt];
                idx--;
            }else maxHeap[idx] = [ch,cnt];
        }
    }

    return res.join("");
};
