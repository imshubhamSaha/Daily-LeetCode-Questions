class Solution:
    def exponentiation (self , base , power, MOD) :
        result = 1

        while power > 0 :
            if power % 2 == 0:
                base = (base * base) % MOD
                power //= 2
            else :
                result = (result * base) % MOD
                power -= 1
        
        return result 

    def countGoodNumbers(self, n: int) -> int:
        if n == 1 :
            return 5

        MOD = 10**9 + 7
        even = (n + 1) // 2
        odd = n // 2

        total_combinations = (self.exponentiation(5, even, MOD) * self.exponentiation(4,odd,MOD)) % MOD

        return total_combinations
