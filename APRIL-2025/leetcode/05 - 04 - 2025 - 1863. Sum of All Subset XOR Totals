class Solution:
    def dfs(self, index: int, curr_xor: int , nums: List[int]) -> int:
        if index == len(nums):
            return curr_xor

        take = self.dfs(index + 1, curr_xor ^ nums[index], nums)
        not_take = self.dfs(index + 1, curr_xor,nums)
        return take + not_take

    def subsetXORSum(self, nums: List[int]) -> int:

        return self.dfs(0, 0,nums)



class Solution:
    def subsetXORSum(self, nums: List[int]) -> int:
        xor_total = 0

        for num in nums :
            xor_total |= num

        return xor_total << (len(nums) - 1)
