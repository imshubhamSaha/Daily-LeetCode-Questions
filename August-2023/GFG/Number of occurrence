class Solution {
    startIdx(arr,n,target) {
        let low = 0, high = n-1, idx =-1;
        
        while(low<=high) {
            let mid = low + Math.floor((high-low)/2);
            
            if(arr[mid] === target) {
                idx = mid;
                high = mid-1;
            }else if(arr[mid] < target) {
                low = mid+1;
            }else{
                high = mid-1;
            }
        }
        
        return idx;
    }
    
    lastIdx(arr,n,target) {
        let low = 0, high = n-1, idx =-1;
        
        while(low<=high) {
            let mid = low + Math.floor((high-low)/2);
            
            if(arr[mid] === target) {
                idx = mid;
                low = mid+1;
            }else if(arr[mid] < target) {
                low = mid+1;
            }else{
                high = mid-1;
            }
        }
        
        return idx;
    }
    
    count(arr,n,x){
        const first = this.startIdx(arr, n, x);
        if(first === -1 ) {
            return 0
        }
        
        const last = this.lastIdx(arr,n,x);
        
        return (last-first)+1;
    }
}
