class Solution {
    sortedMerge(head1, head2) {
        if (!head1 && !head2) 
            return null;
        
        if (!head1) 
            return head2;
        
        if (!head2) 
            return head1;
            
        let curr1 = head1;
        let curr2 = head2;
        
        let newHead = null;
        let prev = null;
        
        while (curr1 && curr2) {
            let val1 = curr1.data;
            let val2 = curr2.data;
            
            if (val1 < val2) {
                if (!newHead) {
                    newHead = curr1;
                }else {
                    prev.next = curr1;
                }
            }else {
                if (!newHead) {
                    newHead = curr2;
                }else {
                    prev.next = curr2;
                }
            }
            
            if (val1 < val2) {
                prev = curr1;
                curr1 = curr1.next;
            }else {
                prev = curr2;
                curr2 = curr2.next;
            }
        }
        
        while (curr1) {
            prev.next = curr1;
            prev = curr1;
            curr1 = curr1.next;
        }
        
        while (curr2) {
            prev.next = curr2;
            prev = curr2;
            curr2 = curr2.next;
        }
        
        return newHead;
    }
}
