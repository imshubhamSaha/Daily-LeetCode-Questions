


/**
 * @param {string} s
 * @return {string}
 */

class Solution {
     expandAroundCenter(s, left, right) {
        while (left >= 0 && right < s.length && s[left] === s[right]) {
            left--;
            right++;
        }
        return s.substring(left + 1, right);
    }
    longestPalindrome(s) {
        const n = s.length;
       if (s.length <= 1) return s;

        let longest = "";
        for (let i = 0; i < s.length; i++) {
            let oddPalindrome = this.expandAroundCenter(s, i, i);
            let evenPalindrome = this.expandAroundCenter(s, i, i + 1);

            if (oddPalindrome.length > longest.length) longest = oddPalindrome;
            if (evenPalindrome.length > longest.length) longest = evenPalindrome;
        }

        return longest;
        
    }
}
