/**
 * @param {number[]} nums
 * @return {number}
 */
var longestNiceSubarray = function(nums) {
    const n = nums.length;

    let left = 0;
    let commulative = nums[0];
    let right = 1;
    let max = 1;
    while (right < n) {
        if ((commulative & nums[right]) === 0) {
            max = Math.max(right-left +1, max);
        }else {
            while (left < right && (commulative & nums[right] )!= 0) {
                commulative ^= nums[left++];
            }
        } 
        commulative |= nums[right++];
    }

    return max;
};
