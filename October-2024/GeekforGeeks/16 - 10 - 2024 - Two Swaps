
class Solution {
    checkSorted(arr) {
        const n = arr.length;
        let swapped = 0;
        
        for (let i = 0; i < n - 1; i++) {
            let minIdx = i;
            
            for (let j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIdx]) {
                    minIdx = j;
                }
            }
            
            if (minIdx !== i) {
                let temp = arr[i];
                arr[i] = arr[minIdx];
                arr[minIdx] = temp;
                swapped++;
            }
        }
        
        return swapped === 2 || !swapped ;
    }
}


________________________________________


class Solution {
    swapTwo(n, arr) {
        let swapped = 0;
        
        for (let i = 0; i < n; i++) {
            if (arr[i] !== i + 1) {
                for (let j = i + 1; j < n; j++) {
                    if (arr[j] === i + 1) {
                        arr[i] = arr[i] ^ arr[j];
                        arr[j] = arr[j] ^ arr[i];
                        arr[i] = arr[i] ^ arr[j];
                        swapped++;
                    }
                    
                    if (swapped === 2) return;
                }
            }
        }
    }
    
    checkSorted(arr) {
        const n = arr.length;
        let swapping = 0;
        
        for (let i = 0; i < n; i++) 
            if (arr[i] !== i+1) swapping++;
        
        if (swapping === 3 || swapping === 0) return true;
        
        if (swapping !== 4) return false;
        
        this.swapTwo(n, arr);
        for (let i = 0; i < n; i++) 
            if (arr[i] !== i + 1) return false;
            
        return true;
    }
}
